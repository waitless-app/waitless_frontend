[{"/home/kalmar/Projects/waitless/waitless_frontend/src/services/jwt.service.js":"1","/home/kalmar/Projects/waitless/waitless_frontend/src/services/api.service.js":"2","/home/kalmar/Projects/waitless/waitless_frontend/src/services/instance.js":"3","/home/kalmar/Projects/waitless/waitless_frontend/src/reportWebVitals.js":"4","/home/kalmar/Projects/waitless/waitless_frontend/src/utils/constants.js":"5","/home/kalmar/Projects/waitless/waitless_frontend/src/premises/Premises.js":"6","/home/kalmar/Projects/waitless/waitless_frontend/src/utils/utils.js":"7","/home/kalmar/Projects/waitless/waitless_frontend/src/index.js":"8","/home/kalmar/Projects/waitless/waitless_frontend/src/utils/localstorage.js":"9","/home/kalmar/Projects/waitless/waitless_frontend/src/app/Login.js":"10","/home/kalmar/Projects/waitless/waitless_frontend/src/app/Dashboard.js":"11","/home/kalmar/Projects/waitless/waitless_frontend/src/premises/PremisesUpdateCreate.js":"12","/home/kalmar/Projects/waitless/waitless_frontend/src/premises/UpdatePremises/UpdatePremises.js":"13","/home/kalmar/Projects/waitless/waitless_frontend/src/premises/PremisesForm.js":"14"},{"size":398,"mtime":1617577521341,"results":"15","hashOfConfig":"16"},{"size":1473,"mtime":1618261409166,"results":"17","hashOfConfig":"16"},{"size":669,"mtime":1618166506782,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1617728784692,"results":"19","hashOfConfig":"16"},{"size":190,"mtime":1617728911170,"results":"20","hashOfConfig":"16"},{"size":3095,"mtime":1618433579515,"results":"21","hashOfConfig":"16"},{"size":234,"mtime":1617741662979,"results":"22","hashOfConfig":"16"},{"size":500,"mtime":1617728784692,"results":"23","hashOfConfig":"16"},{"size":881,"mtime":1617728784692,"results":"24","hashOfConfig":"16"},{"size":1811,"mtime":1617728784688,"results":"25","hashOfConfig":"16"},{"size":2792,"mtime":1617728784688,"results":"26","hashOfConfig":"16"},{"size":3177,"mtime":1618349222532,"results":"27","hashOfConfig":"16"},{"size":1424,"mtime":1618430835413,"results":"28","hashOfConfig":"16"},{"size":2487,"mtime":1618350181885,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15e1rwr",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":3,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"/home/kalmar/Projects/waitless/waitless_frontend/src/services/jwt.service.js",[],"/home/kalmar/Projects/waitless/waitless_frontend/src/services/api.service.js",[],"/home/kalmar/Projects/waitless/waitless_frontend/src/services/instance.js",[],["61","62"],"/home/kalmar/Projects/waitless/waitless_frontend/src/reportWebVitals.js",[],"/home/kalmar/Projects/waitless/waitless_frontend/src/utils/constants.js",["63"],"/home/kalmar/Projects/waitless/waitless_frontend/src/premises/Premises.js",[],"/home/kalmar/Projects/waitless/waitless_frontend/src/utils/utils.js",[],"/home/kalmar/Projects/waitless/waitless_frontend/src/index.js",[],"/home/kalmar/Projects/waitless/waitless_frontend/src/utils/localstorage.js",[],"/home/kalmar/Projects/waitless/waitless_frontend/src/app/Login.js",["64"],"import React from 'react';\nimport {\n  Row, Col, Form, Input, Button, Checkbox,\n} from 'antd';\nimport { History } from 'history';\nimport AuthService from '../services/jwt.service';\nimport { setItem } from '../utils/localstorage';\n\n\nconst Login = ({ history }) => {\n  const onLoginSuccess = (data) => {\n    setItem('access_token', data.access);\n    setItem('refresh_token', data.refresh);\n    history.push('/');\n  };\n\n  const onFinish = (values) => {\n    console.log(values);\n    AuthService.login({ email: values.email, password: values.password })\n      .then(({ data }) => onLoginSuccess(data));\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Row align=\"middle\" justify=\"center\" style={{ height: '100vh' }}>\n      <Col span={6}>\n        <Form\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[{ required: true, message: 'Please input your username!' }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Login;\n","/home/kalmar/Projects/waitless/waitless_frontend/src/app/Dashboard.js",[],"/home/kalmar/Projects/waitless/waitless_frontend/src/premises/PremisesUpdateCreate.js",["65","66","67","68","69"],"/home/kalmar/Projects/waitless/waitless_frontend/src/premises/UpdatePremises/UpdatePremises.js",["70","71","72","73"],"/home/kalmar/Projects/waitless/waitless_frontend/src/premises/PremisesForm.js",["74","75","76","77"],"import React, { useState } from 'react';\nimport {\n    Form,\n    Input,\n    Button,\n    TreeSelect,\n    Upload,\n    message, Spin\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport {toBase64} from \"../utils/utils\";\n\nconst PremisesUpdateCreate = ({ defaultValues, onFormSubmit, isLoading, editMode }) => {\n  const [form] = Form.useForm();\n  const onFinish = (values) => {\n       console.log(values);\n  };\n  const { TextArea } = Input;\n  return (\n    <>\n        <Form\n        form={form}\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 14 }}\n        layout=\"horizontal\"\n        onFinish={onFinish}\n        initialValues={{ ...defaultValues }}\n      >\n        <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true, message: \"Name is required\"}]}>\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Description\" name=\"description\" rules={[{ required: true, message: \"Description is required\"}]}>\n          <TextArea rows={4} />\n        </Form.Item>\n        <Form.Item\n          label=\"Upload Thumbnail\"\n          name=\"image\"\n           rules={[{ required: !editMode , message: \"Image is required\"}]}\n        >\n             <Upload accept=\".png\" beforeUpload={() => false} multiple={false}>\n                  <Button icon={<UploadOutlined />}>\n                      Click to Upload\n                  </Button>\n              </Upload>\n        </Form.Item>\n        <Form.Item label=\"City\" name=\"city\" rules={[{ required: true, message: \"City is required\"}]}>\n          <TreeSelect\n            treeData={[\n              { title: 'Gdynia', value: 'Gdynia' },\n            ]}\n          />\n        </Form.Item>\n        <Form.Item label=\"Postcode\" name=\"postcode\" rules={[{ required: true, message: \"Postcode is required\"}]}>\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Country\" name=\"country\" rules={[{ required: true, message: \"Country is required\"}]}>\n          <TreeSelect\n            treeData={[\n              { title: 'Poland', value: 'Poland' },\n            ]}\n          />\n        </Form.Item>\n        <Form.Item name=\"address\" label=\"Address\" rules={[{ required: true, message: \"Address is required\"}]}>\n          <Input />\n        </Form.Item>\n        <Form.Item wrapperCol={{ span: 8, offset: 4 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n              { editMode ? 'Edit' : 'Create'}\n          </Button>\n        </Form.Item>\n\n      </Form>)}\n    </>\n  );\n};\n\nexport default PremisesUpdateCreate;\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":1,"nodeType":"84","endLine":3,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":17},{"ruleId":"85","severity":1,"message":"89","line":8,"column":5,"nodeType":"87","messageId":"88","endLine":8,"endColumn":12},{"ruleId":"85","severity":1,"message":"90","line":11,"column":9,"nodeType":"87","messageId":"88","endLine":11,"endColumn":17},{"ruleId":"91","severity":2,"message":"92","line":18,"column":48,"nodeType":"87","messageId":"93","endLine":18,"endColumn":52},{"ruleId":"91","severity":2,"message":"94","line":37,"column":11,"nodeType":"87","messageId":"93","endLine":37,"endColumn":21},{"ruleId":"91","severity":2,"message":"94","line":38,"column":68,"nodeType":"87","messageId":"93","endLine":38,"endColumn":78},{"ruleId":"85","severity":1,"message":"89","line":2,"column":9,"nodeType":"87","messageId":"88","endLine":2,"endColumn":16},{"ruleId":"85","severity":1,"message":"95","line":6,"column":32,"nodeType":"87","messageId":"88","endLine":6,"endColumn":46},{"ruleId":"85","severity":1,"message":"96","line":13,"column":17,"nodeType":"87","messageId":"88","endLine":13,"endColumn":22},{"ruleId":"85","severity":1,"message":"97","line":13,"column":35,"nodeType":"87","messageId":"88","endLine":13,"endColumn":42},{"ruleId":"85","severity":1,"message":"98","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"89","line":8,"column":5,"nodeType":"87","messageId":"88","endLine":8,"endColumn":12},{"ruleId":"85","severity":1,"message":"99","line":8,"column":14,"nodeType":"87","messageId":"88","endLine":8,"endColumn":18},{"ruleId":"85","severity":1,"message":"90","line":11,"column":9,"nodeType":"87","messageId":"88","endLine":11,"endColumn":17},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'History' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'toBase64' is defined but never used.","no-undef","'data' is not defined.","undef","'isFetching' is not defined.","'useQueryClient' is defined but never used.","'error' is assigned a value but never used.","'isError' is assigned a value but never used.","'useState' is defined but never used.","'Spin' is defined but never used.","no-global-assign","no-unsafe-negation"]